#!/bin/sh
# graph
# graphing command processor.

usage="graph cmd ...
where *cmd* is one of:
download
split
svg
"

# URL of the file containing temperatures.
Turl="http://data.giss.nasa.gov/gistemp/tabledata_v3/GLB.Ts+dSST.txt"

download () {
    curl "$Turl" > data.txt
}

split () {
  (
    # The last complete year
    last="$(grep -E '^[0-9]{4}( *-?[0-9]+){12}' data.txt |
              cut -c 1-4 | tail -1)"
    for m in 1 2 3 4 5 6 7 8 9 10 11 12
    do
        p=$((5*$m+1))
        q=$(($p+4))
        awk '/^[0-9]/ && +$1 && $1 < '"$last"' {print $0, NR}' data.txt |
          cut "-c1-5,${p}-${q}" > "m${m}.txt"
    done
  )
}

svg () {
  (
    for m in 1 2 3 4 5 6 7 8 9 10 11 12
    do
        svgone "$m"
    done
  )
}

svgone () {
  # $1 is the month number
  (
    # Unit in SVG file is one tenth of a millimetre.
    # Number of units offset for y=0 point.
    # Values of input y go from about -90 to about +90
    # Normal is increasing temps up the page; if flipped then increasing
    # temps are down the page.
    # If the first year is >= 2000 then the x-axis will be flipped and
    # older years will be to the right.
    flipped="no"
    labelled="yes"
    offset=500
    # Number of vertical units for one unit temperature.
    yscale=-5
    # Horizontal size of one year.
    hstep=20
    base=1000
    if [ "$flipped" = "yes" ] ; then
        yscale=$((-$yscale))
        base=0
    fi
    m="$1"
    f="m${m}.txt"

    # The first year in the file, will be on left-hand edge, not
    # necessarily earliest year.
    firstyear=$(awk '{print $1;exit}' "$f")
    if [ "$firstyear" -ge 2000 ] ; then
        hscale=-"$hstep"
    else
        hscale="$hstep"
    fi
    range=$(sort -n "$f" | sed -n '1s/ .*//p;$s/ .*//p')
    minyear=$(set -- $range; echo $1)
    maxyear=$(set -- $range; echo $2)
    range=$(echo $range | sed 's/ / to /')

    path=$(
        echo M0 "$base"
        while read row
        do
            set -- $row
            y=$(($offset + $2*$yscale))
            x=$(( ($1-$firstyear)*$hscale ))
            echo "V${y}h${hstep}"
        done < "$f"
        echo V"$base" Z
        )
    path=$(echo $path)

    labels=""
    if [ "$labelled" = "yes" ] ; then
        firstdecade=$(( ($minyear+9)/10*10 ))
        lastdecade=$(( $maxyear/10*10 ))
        d=$firstdecade
        while
            x=$(( ($d-$firstyear)*$hscale + $hstep ))
            y=$(( $base - 10 ))
            label="$label
<g transform='translate($x $y) rotate(-90)'>
  <text>$d</text></g>"
            [ $d -lt $lastdecade ]
        do
            d=$(( $d+10 ))
        done
    fi
    text="$range  $(Month $m)"
    cat <<! > "s${m}.svg"
<svg
  xmlns="http://www.w3.org/2000/svg"
  >
<defs>
  <style type="text/css">
    path { stroke: red; stroke-width: 1.2; fill: none }
    text { fill: black; font-family: Ubuntu Light }
  </style>
</defs>


<g transform="scale(0.4)">
<path d="$path" />
$label
</g>
<text x="120mm" y="90mm" font-size="6mm">$text</text>
</svg>
!
  )
}

Month () {
    # Convert numeric month, 1 to 12, into full name.
    date -d "$1/20" +%B
}

for a
do
    $a
done
